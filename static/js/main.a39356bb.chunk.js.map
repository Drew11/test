{"version":3,"sources":["components/ShoppingCart/ShoppingCart.js","components/Header/Header.js","components/ModalShoppingCart/ModalShoppingCart.js","components/Main/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["ShoppingCart","props","addedProducts","switchModal","totalProducts","Object","values","reduce","acum","current","react_default","a","createElement","className","onClick","concat","Header","src","alt","components_ShoppingCart_ShoppingCart","ModalShoppingCart","scooters","removeProduct","scootersName","keys","length","map","name","index","key","filter","scooter","price","Main","isActiveModal","addProduct","components_ModalShoppingCart_ModalShoppingCart","image","id","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","pevState","_objectSpread","_this$state","state","selectScooter","copy","Data","products","components_Header_Header","components_Main_Main","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a39356bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './shopping-cart.css';\r\n\r\nconst ShoppingCart = (props) => {\r\n\r\n    const {addedProducts, switchModal} = props;\r\n    const totalProducts = Object.values(addedProducts).reduce((acum, current)=> acum + current,0);\r\n\r\n    return (\r\n            <div className={\"shopping-cart\"}>\r\n                <i  onClick={switchModal}\r\n                    className=\"material-icons\">\r\n                    shopping_cart\r\n                </i>\r\n                <span>Total Products: {`(${totalProducts})`}</span>\r\n\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default ShoppingCart;\r\n\r\n// const scooters = Object.keys(addedProducts);\r\n/*// {scooters.map(scooter=><div>{`${scooter}: ${addedProducts[scooter]}`}</div>)*/","import React from 'react';\nimport ShoppingCart from '../ShoppingCart/ShoppingCart';\nimport './Header.css';\n\nconst  Header  = (props) => {\n    const { addedProducts, switchModal } = props;\n\n    return (\n      <div className=\"Header-container\">\n\n        <span className=\"Header-title\">E-scooter Emporium</span>\n        <img src=\"./assets/logo.png\" className=\"Header-logo\" alt=\"logo\" />\n\n\n        <div className={\"shopping-cart-container\"}>\n          <ShoppingCart\n              addedProducts={addedProducts}\n              switchModal={switchModal}\n          />\n        </div>\n\n      </div>\n    );\n\n};\n\nexport default Header;\n","import React from 'react';\r\nimport './modal-shopping-cart.css';\r\n\r\nconst ModalShoppingCart = (props)=>{\r\n\r\n    const {addedProducts, scooters, removeProduct} = props;\r\n    const scootersName =  Object.keys(addedProducts);\r\n\r\n\r\n    return (\r\n        <div className={\"modal-shopping-cart\"}>\r\n            <ul className={\"modal-items\"}>\r\n\r\n                {scootersName.length===0?\r\n                    <li>Sorry, products not added yet... </li>:null\r\n                }\r\n\r\n                {scootersName.map((name, index)=>\r\n                    <li key={index}>\r\n                        {`${name}: ${addedProducts[name]}\r\n                        * ${scooters.filter(scooter=>scooter.name===name)[0].price}`}\r\n\r\n                        Total: {addedProducts[name] * scooters.filter(scooter=>scooter.name===name)[0].price}\r\n\r\n                        <button className={\"remove-item\"}\r\n                            onClick={()=>{removeProduct(name)}}\r\n                        >Remove item\r\n                        </button>\r\n\r\n                    </li>\r\n                )}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ModalShoppingCart;","import React from \"react\";\r\nimport ModalShoppingCart from '../ModalShoppingCart/ModalShoppingCart';\r\nimport './Main.css';\r\n\r\nconst Main  = (props) => {\r\n\r\n    const {\r\n        scooters,\r\n        isActiveModal,\r\n        addedProducts,\r\n        addProduct,\r\n        removeProduct\r\n    } = props;\r\n\r\n        return (\r\n                <div className=\"App-main\">\r\n\r\n                    {isActiveModal ?\r\n                        <ModalShoppingCart\r\n                            addedProducts={addedProducts}\r\n                            scooters={scooters}\r\n                            removeProduct={removeProduct}\r\n                        />\r\n                        :\r\n                        null}\r\n\r\n                    {\r\n                        scooters.map((scooter, index)=>\r\n\r\n                            <div key={index}\r\n                                className={\"scooter\"}\r\n                            >\r\n                                <img src={`.${scooter.image}`} alt=\"\"/>\r\n                                <div className={\"scooter-right-section\"}\r\n                                >\r\n                                    <span>{scooter.name}</span>\r\n                                    <span>${scooter.price}</span>\r\n\r\n                                    <button\r\n                                        className={\"scooter-add\"}\r\n                                        onClick={()=>\r\n                                            addProduct(scooter.id)\r\n\r\n                                        }\r\n                                    >\r\n                                        Add</button>\r\n                                </div>\r\n\r\n                            </div>\r\n\r\n                        )}\r\n                </div>\r\n\r\n        );\r\n\r\n};\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\nimport Header from \"./Header/Header\";\nimport Main from './Main/Main'\nimport \"./App.css\";\nimport Data from '../products.json';\nclass App extends Component {\n\n  constructor(){\n      super();\n      this.state={\n          scooters: [],\n          addedProducts:{},\n          isActiveModal: false\n      }\n  }\n\n\n  switchModal =()=>{\n      this.setState((pevState)=>({\n          ...pevState,\n          isActiveModal: !pevState.isActiveModal\n      }))\n  };\n\n\n  addProduct =(id)=>{\n      const {scooters, addedProducts} = this.state;\n      let selectScooter = scooters.filter(scooter=>scooter.id === id)[0];\n      const copy = {...addedProducts};\n\n      if(!copy[selectScooter.name]){\n          copy[selectScooter.name] = 1;\n      }else {\n          copy[selectScooter.name]++;\n      }\n\n      this.setState({\n          ...this.state,\n          addedProducts: copy\n      })\n  };\n\n  removeProduct =(name)=>{\n      const {addedProducts} = this.state;\n      const copy = {...addedProducts};\n\n      copy[name]--;\n\n      if(copy[name]===0){\n          delete copy[name]\n      }\n\n      this.setState({\n          ...this.state,\n          addedProducts: copy\n      })\n\n  };\n  componentDidMount(){\n     this.setState({\n          ...this.state,\n          scooters: Data.products\n      })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Header\n            addedProducts={this.state.addedProducts}\n            switchModal={this.switchModal}\n        />\n\n          <Main\n             scooters={this.state.scooters}\n             addedProducts={this.state.addedProducts}\n             isActiveModal={this.state.isActiveModal}\n             removeProduct={this.removeProduct}\n             addProduct={this.addProduct}\n          />\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\n\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}